version: "3.1"
#
services:
  nginx:
    image: kbase/nginx:latest
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/nginx.conf.templ:/etc/nginx/nginx.conf"
    #  - "-env"
    #  - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/nginx-minikb.ini"
      - "nginx"
    env_file:
      - deployment/conf/nginx-minikb.ini
    ports:
      - "8000:80"
    depends_on: ["auth", "handle_service", "handle_manager", "workspace", "shock", "ujs"]

  kbase-ui:
    image: kbase/kbase-ui:latest
    command:
      - "-stdout"
      - "/var/log/nginx/access.log"
      - "-stderr"
      - "/var/log/nginx/err.log"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/kbase-ui-minikb.ini"
      - "-template"
      - "/kb/deployment/conf/nginx.conf.tmpl:/etc/nginx/nginx.conf"
      - "-template"
      - "/kb/deployment/conf/config.json.tmpl:/kb/deployment/services/kbase-ui/modules/deploy/config.json"
      - "nginx"
    # Alternatively you can comment out the -env params to the container and use your local
    # environment definitions with something like the following:
    # environment:
    #   - name=value
    #   - name2=value2
    #
    # Or if you want to use a file:
    #env_file:
    #  - deployment/conf/kbase-ui-minikb.ini
  search:
    image: kbase/kb_search:latest
    command:
      - "-stdout"
      - "/kb/deployment/jettybase/logs/request.log"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/search-minikb.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/search_tools.cfg.templ:/kb/deployment/conf/search_tools.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/http.ini.templ:/kb/deployment/jettybase/start.d/http.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/server.ini.templ:/kb/deployment/jettybase/start.d/server.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/start_server.sh.templ:/kb/deployment/bin/start_server.sh"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://workspace:8080"
      - "-wait"
      - "tcp://elastic:9200"
      - "/kb/deployment/bin/entrypoint.sh"
    depends_on: ["auth", "handle_service", "workspace", "shock", "ujs", "nginx"]

  coordinator:
    image: kbase/kb_search:latest
    command:
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/search-minikb.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/search_tools.cfg.templ:/kb/deployment/conf/search_tools.cfg"
      - "/kb/deployment/bin/entrypoint.sh"
      - "coordinator"
    depends_on: ["auth", "handle_service", "workspace", "shock", "ujs", "nginx", "ci-mongo"]

  worker:
    image: kbase/kb_search:latest
    command:
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/search-minikb.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/search_tools.cfg.templ:/kb/deployment/conf/search_tools.cfg"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://workspace:8080"
      - "/kb/deployment/bin/entrypoint.sh"
      - "worker"
    depends_on: ["auth", "handle_service", "workspace", "shock", "ujs", "nginx", "ci-mongo"]

  logstash:
    image: kbase/kb_logstash:latest
    command:
      - "-template"
      - "/usr/share/logstash/.templates/10inputs.templ:/usr/share/logstash/pipeline/10inputs"
      - "-template"
      - "/usr/share/logstash/.templates/99outputs.templ:/usr/share/logstash/pipeline/99outputs"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://elastic:9200"
      - "logstash"
    ports:
      - "9000:9000"
    environment:
      - "debug_output=1"
      - "elastic_server=elastic:9200"
    depends_on: ["elastic"]

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  ujs:
    image: kbase/kb_ujs:latest
    entrypoint:
      - "/kb/deployment/bin/dockerize"
    command:
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/ujs-minikb.ini"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/server.xml.templ:/kb/deployment/services/ujs/tomcat/conf/server.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/tomcat-users.xml.templ:/kb/deployment/services/ujs/tomcat/conf/tomcat-users.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/logging.properties.templ:/kb/deployment/services/ujs/tomcat/conf/logging.properties"
      - "-template"
      - "/kb/deployment/conf/.templates/setenv.sh.templ:/kb/deployment/services/ujs/tomcat/bin/setenv.sh"
      - "-timeout"
      - "120s"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://awe:8080"
      - "-wait"
      - "tcp://workspace:8080"
      - "-stdout"
      - "/kb/deployment/services/ujs/tomcat/logs/catalina.out"
      - "-stdout"
      - "/kb/deployment/services/ujs/tomcat/logs/access.log"
      - "-stdout"
      - "/var/log/syslog"
      - "/kb/deployment/bin/startup.sh"
      # 
    depends_on: ["auth", "awe", "workspace", "ci-mongo","db-init"]

  awe:
    image: kbase/kb_awe:latest
    command:
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-timeout"
      - "120s"
      - "-template"
      - "/kb/deployment/conf/.templates/awe-server.cfg.templ:/kb/deployment/conf/awe-server.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/awe-minikb.ini"
      - "/kb/deployment/bin/awe-server"
      - "--conf"
      - "/kb/deployment/conf/awe-server.cfg" 
    #ports:
    #  - "8080:8080"
    depends_on: ["ci-mongo","db-init"]


  workspace:
    image: kbase/kb_workspace:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-template"
      - "/kb/deployment/conf/.templates/server.xml.templ:/kb/deployment/services/workspace/tomcat/conf/server.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/tomcat-users.xml.templ:/kb/deployment/services/workspace/tomcat/conf/tomcat-users.xml"
      - "-template"
      - "/kb/deployment/conf/.templates/logging.properties.templ:/kb/deployment/services/workspace/tomcat/conf/logging.properties"
      - "-template"
      - "/kb/deployment/conf/.templates/setenv.sh.templ:/kb/deployment/services/workspace/tomcat/bin/setenv.sh"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/workspace-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://handle_service:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-timeout"
      - "150s"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/catalina.out"
      - "-stdout"
      - "/kb/deployment/services/workspace/tomcat/logs/access.log"
      - "/usr/share/tomcat8/bin/catalina.sh"
      - "run"
    #ports:
    #  - "7058:7058"
    depends_on: ["auth", "handle_service", "handle_manager", "ci-mongo","db-init", "shock"]
    # Mount this stuff in when running initialize.py is needed to reset workspace config

  shell:
    image: kbase/db_initialize
    entrypoint: [ "/bin/bash"]
    stdin_open: true
    tty: true
    volumes:
      - .:/home/workspace_deluxe
  
  handle_service:
    image: kbase/handle_service:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_service-minikb.ini"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-wait"
      - "tcp://shock:8080"
      - "-wait"
      - "tcp://ci-mysql:3306"
      - "-timeout"
      - "150s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/AbstractHandle/AbstractHandle.psgi"
    environment:
      - KB_SERVICE_NAME=handle_service
    #ports:
    #  - "7109:7109"
    depends_on: ["handle_manager", "ci-mysql", "shock", "auth","db-init"]

  shock:
    image: kbase/kb_shock:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/shock-server.cfg.templ:/kb/deployment/conf/shock-server.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/shock-minikb.ini"
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "150s"
      - "/kb/deployment/bin/shock-server"
      - "--conf"
      - "/kb/deployment/conf/shock-server.cfg"
    #ports:
    #  - "7044:7044"
    depends_on: ["ci-mongo", "db-init", "auth"]

  handle_manager:
    image: kbase/handle_mngr:develop
    command:
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/handle_mngr-minikb.ini"
      - "-wait"
      - "tcp://auth:8080"
      - "-timeout"
      - "120s"
      - "starman"
      - "--listen"
      - ":8080"
      - "/kb/deployment/lib/Bio/KBase/HandleMngr/HandleMngr.psgi"
    #ports:
    #  - "9001:9001"
    depends_on: ["auth","db-init"]

  auth:
    image: kbase/kb_auth2:develop
    command:
      - "-wait"
      - "tcp://ci-mongo:27017"
      - "-wait"
      - "tcp://db-init:8080"
      - "-timeout"
      - "120s"
      - "-template"
      - "/kb/deployment/conf/.templates/deployment.cfg.templ:/kb/deployment/conf/deployment.cfg"
      - "-env"
      - "https://raw.githubusercontent.com/kbase/mini_kb/master/deployment/conf/auth2-minikb.ini"
      - "/kb/deployment/bin/start_auth2.sh"
    #env_file:
    #  - deployment/conf/auth2-minikb.ini
    #ports:
    #  - "8080:8080"
    depends_on: ["ci-mongo","db-init"]

  db-init:
    image: kbase/db_initialize
    volumes:
      - ./mysqldump:/mnt/mysqldump
      - ./ws.mongodump:/mnt/ws.mongodump
      - ./bin:/mnt/bin
    entrypoint:
      - /kb/deployment/bin/dockerize.sh
      - -wait
      - tcp://ci-mysql:3306/
      - -wait
      - tcp://ci-mongo:27017
      - -timeout
      - 120s
      - /mnt/bin/initialize_all.sh
    depends_on: ['ci-mysql','ci-mongo']

  ci-mongo:
    image: mongo:2
    ports:
      - "27017:27017"
    command: --smallfiles

  
  ci-mysql:
    image: mysql:5.5
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    #ports:
    #  - "3306:3306"
